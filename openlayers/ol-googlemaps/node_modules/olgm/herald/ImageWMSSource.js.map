{"version":3,"file":"ImageWMSSource.js","sources":["../../../src/olgm/herald/ImageWMSSource.js"],"sourcesContent":["/**\n * @module olgm/herald/ImageWMSSource\n */\nimport {getTopLeft} from 'ol/extent.js';\nimport {transform} from 'ol/proj.js';\nimport ImageWMS from 'ol/source/ImageWMS.js';\nimport {unlistenAllByKey} from '../util.js';\nimport {assert} from '../asserts.js';\nimport ImageOverlay from '../gm/ImageOverlay.js';\nimport SorceHerald from './Source.js';\nimport {assign} from '../obj.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} LayerCache\n * @property {module:olgm/gm/ImageOverlay} imageOverlay\n * @property {string|null} lastUrl\n * @property {module:ol/layer/Image} layer\n * @property {Array<module:ol/events~EventsKey|Array<module:ol/events~EventsKey>>} listenerKeys\n * @property {number} opacity\n * @property {number} zIndex\n */\n\nclass ImageWMSSourceHerald extends SorceHerald {\n  /**\n   * Listen to a Image WMS layer\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   */\n  constructor(ol3map, gmap) {\n    super(ol3map, gmap);\n\n    /**\n    * @type {Array<module:olgm/herald/ImageWMSSource~LayerCache>}\n    * @private\n    */\n    this.cache_ = [];\n\n    /**\n    * @type {Array<module:ol/layer/Image>}\n    * @private\n    */\n    this.layers_ = [];\n  }\n\n\n  /**\n   * @param {module:ol/layer/Base} layer layer to watch\n   * @override\n   */\n  watchLayer(layer) {\n    const imageLayer = /** @type {module:ol/layer/Image} */ (layer);\n\n    // Source must be ImageWMS\n    const source = imageLayer.getSource();\n    if (!(source instanceof ImageWMS)) {\n      return;\n    }\n\n    this.layers_.push(imageLayer);\n\n    // opacity\n    const opacity = imageLayer.getOpacity();\n\n    const cacheItem = /** {@type module:olgm/herald/ImageWMSSource~LayerCache} */ ({\n      imageOverlay: null,\n      lastUrl: null,\n      layer: imageLayer,\n      listenerKeys: [],\n      opacity: opacity,\n      zIndex: 0\n    });\n\n    // Hide the google layer when the ol3 layer is invisible\n    cacheItem.listenerKeys.push(imageLayer.on('change:visible',\n      () => this.handleVisibleChange_(cacheItem)));\n\n    cacheItem.listenerKeys.push(this.ol3map.on('moveend',\n      () => this.handleMoveEnd_(cacheItem)));\n\n    cacheItem.listenerKeys.push(this.ol3map.getView().on('change:resolution',\n      () => this.handleMoveEnd_(cacheItem)));\n\n    // Make sure that any change to the layer source itself also updates the\n    // google maps layer\n    cacheItem.listenerKeys.push(imageLayer.getSource().on('change',\n      () => this.handleMoveEnd_(cacheItem)));\n\n    // Activate the cache item\n    this.activateCacheItem_(cacheItem);\n    this.cache_.push(cacheItem);\n  }\n\n\n  /**\n   * Unwatch the WMS Image layer\n   * @param {module:ol/layer/Base} layer layer to unwatch\n   * @override\n   */\n  unwatchLayer(layer) {\n    const imageLayer = /** @type {module:ol/layer/Image} */ (layer);\n\n    const index = this.layers_.indexOf(imageLayer);\n    if (index !== -1) {\n      this.layers_.splice(index, 1);\n\n      const cacheItem = this.cache_[index];\n      unlistenAllByKey(cacheItem.listenerKeys);\n\n      // Clean previous overlay\n      this.resetImageOverlay_(cacheItem);\n\n      // opacity\n      imageLayer.setOpacity(cacheItem.opacity);\n\n      this.cache_.splice(index, 1);\n    }\n  }\n\n\n  /**\n   * Activate all cache items\n   * @override\n   */\n  activate() {\n    super.activate();\n    this.cache_.forEach(this.activateCacheItem_, this);\n  }\n\n\n  /**\n   * Activates an image WMS layer cache item.\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem to\n   * activate\n   * @private\n   */\n  activateCacheItem_(\n    cacheItem) {\n    const layer = cacheItem.layer;\n    const visible = layer.getVisible();\n    if (visible && this.googleMapsIsActive) {\n      cacheItem.lastUrl = null;\n      cacheItem.layer.setOpacity(0);\n      this.updateImageOverlay_(cacheItem);\n    }\n  }\n\n\n  /**\n   * Deactivate all cache items\n   * @override\n   */\n  deactivate() {\n    super.deactivate();\n    this.cache_.forEach(this.deactivateCacheItem_, this);\n  }\n\n\n  /**\n   * Deactivates an Image WMS layer cache item.\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem to\n   * deactivate\n   * @private\n   */\n  deactivateCacheItem_(\n    cacheItem) {\n    if (cacheItem.imageOverlay) {\n      cacheItem.imageOverlay.setMap(null);\n      cacheItem.imageOverlay = null;\n    }\n    cacheItem.layer.setOpacity(cacheItem.opacity);\n  }\n\n\n  /**\n   * Generate a wms request url for a single image\n   * @param {module:ol/layer/Image} layer layer to query\n   * @return {string} url to the requested tile\n   * @private\n   */\n  generateImageWMSFunction_(layer) {\n    let key;\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n\n    const params = source.getParams();\n    const ol3map = this.ol3map;\n\n    //base WMS URL\n    const baseUrl = /** @type {string} */ (source.getUrl());\n    assert(\n      baseUrl !== undefined, 'Expected the source to have an url');\n    const size = ol3map.getSize();\n\n    assert(\n      size !== undefined, 'Expected the map to have a size');\n\n    const view = ol3map.getView();\n    const bbox = view.calculateExtent(size);\n\n    // Separate original WMS params and custom ones\n    const wmsParamsList = [\n      'CRS',\n      'BBOX',\n      'FORMAT',\n      'HEIGHT',\n      'LAYERS',\n      'REQUEST',\n      'SERVICE',\n      'SRS',\n      'STYLES',\n      'TILED',\n      'TRANSPARENT',\n      'VERSION',\n      'WIDTH'\n    ];\n    const customParams = {};\n    const wmsParams = {};\n    for (key in params) {\n      const upperCaseKey = key.toUpperCase();\n      if (wmsParamsList.indexOf(upperCaseKey) === -1) {\n        if (params[key] !== undefined && params[key] !== null) {\n          customParams[key] = params[key];\n        }\n      } else {\n        wmsParams[upperCaseKey] = params[key];\n      }\n    }\n\n    // Set WMS params\n    const version = wmsParams['VERSION'] ? wmsParams['VERSION'] : '1.3.0';\n    const layers = wmsParams['LAYERS'] ? wmsParams['LAYERS'] : '';\n    const styles = wmsParams['STYLES'] ? wmsParams['STYLES'] : '';\n    const format = wmsParams['FORMAT'] ? wmsParams['FORMAT'] : 'image/png';\n    const transparent = wmsParams['TRANSPARENT'] ?\n      wmsParams['TRANSPARENT'] : 'TRUE';\n    const tiled = wmsParams['TILED'] ? wmsParams['TILED'] : 'FALSE';\n\n    // Check whether or not we're using WMS 1.3.0\n    const versionNumbers = version.split('.');\n    const wms13 = (\n      parseInt(versionNumbers[0], 10) >= 1 &&\n      parseInt(versionNumbers[1], 10) >= 3);\n\n    const queryParams = {\n      'BBOX': bbox,\n      'FORMAT': format,\n      'HEIGHT': size[1],\n      'LAYERS': layers,\n      'REQUEST': 'GetMap',\n      'SERVICE': 'WMS',\n      'STYLES': styles,\n      'TILED': tiled,\n      'TRANSPARENT': transparent,\n      'VERSION': version,\n      'WIDTH': size[0]\n    };\n\n    const epsg3857 = 'EPSG:3857';\n    if (wms13) {\n      queryParams['CRS'] = epsg3857;\n    } else {\n      queryParams['SRS'] = epsg3857;\n    }\n\n    assign(queryParams, customParams);\n\n    const url = appendParams(baseUrl, queryParams);\n\n    return url;\n  }\n\n\n  /**\n   * Clean-up the image overlay\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem\n   * @private\n   */\n  resetImageOverlay_(cacheItem) {\n    // Clean previous overlay\n    if (cacheItem.imageOverlay) {\n      // Remove the overlay from the map\n      cacheItem.imageOverlay.setMap(null);\n\n      // Destroy the overlay\n      cacheItem.imageOverlay = null;\n    }\n  }\n\n\n  /**\n   * Refresh the custom image overlay on google maps\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem for the\n   * layer to update\n   * @param {boolean=} opt_force whether we should refresh even if the\n   * url for the request hasn't changed. Defaults to false.\n   * @private\n   */\n  updateImageOverlay_(cacheItem, opt_force) {\n    const layer = cacheItem.layer;\n\n    if (!layer.getVisible()) {\n      return;\n    }\n\n    let url = this.generateImageWMSFunction_(layer);\n    const forceRefresh = opt_force == true;\n\n    // Force a refresh by setting a new url\n    if (forceRefresh) {\n      url += '&timestamp=' + new Date().getTime();\n    }\n\n    // Check if we're within the accepted resolutions\n    const minResolution = layer.getMinResolution();\n    const maxResolution = layer.getMaxResolution();\n    const currentResolution = this.ol3map.getView().getResolution();\n    if (currentResolution < minResolution || currentResolution > maxResolution) {\n      this.resetImageOverlay_(cacheItem);\n      return;\n    }\n\n    /* We listen to both change:resolution and moveend events. However, changing\n    * resolution eventually sends a moveend event as well. Using only the\n    * moveend event makes zooming in/out look bad. To prevent rendering the\n    * overlay twice when it happens, we save the request url, and if it's the\n    * same as the last time, we don't render it.\n    */\n    if (url == cacheItem.lastUrl) {\n      return;\n    }\n\n    cacheItem.lastUrl = url;\n\n    // Create a new overlay\n    const view = this.ol3map.getView();\n    const size = this.ol3map.getSize();\n\n    assert(\n      size !== undefined, 'Expected the map to have a size');\n\n    const extent = view.calculateExtent(size);\n\n    // First, get the coordinates of the top left corner\n    const topLeft = getTopLeft(extent);\n\n    // Then, convert it to LatLng coordinates for google\n    const lngLat = transform(topLeft, 'EPSG:3857', 'EPSG:4326');\n    const topLeftLatLng = new google.maps.LatLng(lngLat[1], lngLat[0]);\n\n    const overlay = new ImageOverlay(\n      url,\n      /** @type {Array<number>} */ (size),\n      topLeftLatLng);\n    overlay.setZIndex(cacheItem.zIndex);\n\n    // Set the new overlay right away to give it time to render\n    overlay.setMap(this.gmap);\n\n    // Clean previous overlay\n    this.resetImageOverlay_(cacheItem);\n\n    // Save new overlay\n    cacheItem.imageOverlay = overlay;\n  }\n\n\n  /**\n   * Order the layers by index in the ol3 layers array\n   * @api\n   */\n  orderLayers() {\n    for (let i = 0; i < this.cache_.length; i++) {\n      const cacheItem = this.cache_[i];\n      const layer = cacheItem.layer;\n      const zIndex = this.findIndex(layer);\n      cacheItem.zIndex = zIndex;\n\n      // There won't be an imageOverlay while Google Maps isn't visible\n      if (cacheItem.imageOverlay) {\n        cacheItem.imageOverlay.setZIndex(zIndex);\n      }\n    }\n  }\n\n\n  /**\n   * Refresh the image overlay for each cache item\n   * @api\n   */\n  refresh() {\n    for (let i = 0; i < this.cache_.length; i++) {\n      this.updateImageOverlay_(this.cache_[i], true);\n    }\n  }\n\n\n  /**\n   * Deal with the google WMS layer when we enable or disable the OL3 WMS layer\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem for the\n   * watched layer\n   * @private\n   */\n  handleVisibleChange_(\n    cacheItem) {\n    const layer = cacheItem.layer;\n    const visible = layer.getVisible();\n\n    if (visible) {\n      this.activateCacheItem_(cacheItem);\n    } else {\n      this.deactivateCacheItem_(cacheItem);\n    }\n  }\n\n\n  /**\n   * Handle the map being panned when an ImageWMS layer is present\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem for the\n   * watched layer\n   * @private\n   */\n  handleMoveEnd_(\n    cacheItem) {\n    if (cacheItem.layer.getVisible() && this.ol3map.getView().getCenter()) {\n      this.updateImageOverlay_(cacheItem);\n    }\n  }\n}\n\n\nexport default ImageWMSSourceHerald;\n"],"names":["super","const","this","let"],"mappings":"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"}
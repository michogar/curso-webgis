{"version":3,"file":"Source.js","sources":["../../../src/olgm/herald/Source.js"],"sourcesContent":["/**\n * @module olgm/herald/Source\n */\nimport Herald from './Herald.js';\n\nclass SourceHerald extends Herald {\n  /**\n   * This is an abstract class. Children of this class will listen to one or\n   * multiple layers of a specific class to render them using the Google Maps\n   * API whenever a Google Maps layer is active.\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   * @abstract\n   */\n  constructor(ol3map, gmap) {\n    super(ol3map, gmap);\n\n    /**\n     * Flag that determines whether the GoogleMaps map is currently active, i.e.\n     * is currently shown and has the OpenLayers map added as one of its control.\n     * @type {boolean}\n     * @protected\n     */\n    this.googleMapsIsActive_ = false;\n  }\n\n\n  /**\n   * Watch the layer. This adds the layer to the list of layers the herald is\n   * listening to, so that it can display it using Google Maps as soon as the\n   * layer becomes visible.\n   * @param {module:ol/layer/Base} layer layer to watch\n   * @abstract\n   * @api\n   */\n  watchLayer(layer) {}\n\n\n  /**\n   * Stop watching the layer. This removes the layer from the list of layers the\n   * herald is listening to, and restores its original opacity.\n   * @param {module:ol/layer/Base} layer layer to unwatch\n   * @abstract\n   * @api\n   */\n  unwatchLayer(layer) {}\n\n\n  /**\n   * Set the googleMapsIsActive value to true or false\n   * @param {boolean} active whether or not google maps is active\n   * @api\n   */\n  setGoogleMapsActive(active) {\n    this.googleMapsIsActive = active;\n  }\n\n\n  /**\n   * Find the index of a layer in the ol3 map's layers\n   * @param {module:ol/layer/Base} layer layer to find in ol3's layers array\n   * @returns {number} suggested zIndex for that layer\n   * @api\n   */\n  findIndex(layer) {\n    const layers = this.ol3map.getLayers().getArray();\n    let layerIndex = layers.indexOf(layer);\n    const zIndex = layer.getZIndex();\n\n    if (zIndex != 0) {\n      layerIndex = zIndex;\n    }\n\n    return layerIndex;\n  }\n}\nexport default SourceHerald;\n"],"names":["super","const","let"],"mappings":"AAAA;;;AAGA,OAAO,MAAM,MAAM,aAAa,CAAC;;AAEjC,IAAM,YAAY,GAAe;EAS/B,qBAAW,CAAC,MAAM,EAAE,IAAI,EAAE;IACxBA,WAAK,OAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;;;;;;;IAQpB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;;;;;oDAClC;;;;;;;;;;;yBAWD,iCAAU,CAAC,KAAK,EAAE,GAAE;;;;;;;;;;yBAUpB,qCAAY,CAAC,KAAK,EAAE,GAAE;;;;;;;;yBAQtB,mDAAmB,CAAC,MAAM,EAAE;IAC1B,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;IAClC;;;;;;;;;yBASD,+BAAS,CAAC,KAAK,EAAE;IACfC,GAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC;IAClDC,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACvCD,GAAK,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;;IAEjC,IAAI,MAAM,IAAI,CAAC,EAAE;MACf,UAAU,GAAG,MAAM,CAAC;KACrB;;IAED,OAAO,UAAU,CAAC;GACnB;;;EArEwB,SAsE1B;AACD,eAAe,YAAY,CAAC;"}